# ========================================
# 3-2-1-1-0 Backup Management System
# nginx リバースプロキシ設定
# ========================================

# HTTPからHTTPSへのリダイレクト
server {
    listen 80;
    listen [::]:80;
    server_name backup.example.com 192.168.3.135;

    # Let's Encrypt証明書取得用（オプション）
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # HTTPSへリダイレクト
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS設定
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name backup.example.com 192.168.3.135;

    # SSL証明書設定
    # Windows: C:/nginx/certs/
    # Linux: /etc/nginx/ssl/
    ssl_certificate C:/nginx/certs/backup.crt;
    ssl_certificate_key C:/nginx/certs/backup.key;

    # SSL設定（推奨）
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # セキュリティヘッダー
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # ログ設定
    access_log logs/backup_system_access.log;
    error_log logs/backup_system_error.log;

    # クライアント設定
    client_max_body_size 100M;
    client_body_timeout 300s;

    # プロキシ設定
    location / {
        # Flaskアプリケーションへプロキシ
        proxy_pass http://127.0.0.1:5000;

        # プロキシヘッダー
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # プロキシタイムアウト
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;

        # WebSocketサポート（将来の拡張用）
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # バッファリング設定
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }

    # 静的ファイル（直接配信）
    location /static/ {
        alias C:/BackupSystem/app/static/;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }

    # レポートファイル（認証後のみアクセス可能）
    location /reports/ {
        internal;
        alias C:/BackupSystem/reports/;
    }

    # ヘルスチェックエンドポイント
    location /health {
        proxy_pass http://127.0.0.1:5000/health;
        access_log off;
    }

    # favicon
    location = /favicon.ico {
        alias C:/BackupSystem/app/static/favicon.ico;
        access_log off;
        log_not_found off;
    }

    # robots.txt（検索エンジンクローラー制御）
    location = /robots.txt {
        return 200 "User-agent: *\nDisallow: /\n";
        access_log off;
        log_not_found off;
    }
}

# ========================================
# HTTP専用設定（開発・テスト環境用）
# ========================================
# server {
#     listen 80;
#     listen [::]:80;
#     server_name backup.example.com 192.168.3.135;
#
#     # セキュリティヘッダー
#     add_header X-Frame-Options "SAMEORIGIN" always;
#     add_header X-Content-Type-Options "nosniff" always;
#     add_header X-XSS-Protection "1; mode=block" always;
#
#     # ログ設定
#     access_log logs/backup_system_access.log;
#     error_log logs/backup_system_error.log;
#
#     # クライアント設定
#     client_max_body_size 100M;
#     client_body_timeout 300s;
#
#     # プロキシ設定
#     location / {
#         proxy_pass http://127.0.0.1:5000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#
#         proxy_connect_timeout 300s;
#         proxy_send_timeout 300s;
#         proxy_read_timeout 300s;
#     }
#
#     # 静的ファイル
#     location /static/ {
#         alias C:/BackupSystem/app/static/;
#         expires 30d;
#     }
# }

# ========================================
# 特定IPアドレスからのみアクセス許可
# ========================================
# server {
#     listen 80;
#     server_name backup.example.com;
#
#     # アクセス制御
#     allow 192.168.3.0/24;
#     deny all;
#
#     location / {
#         proxy_pass http://127.0.0.1:5000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }

# ========================================
# Basic認証設定（追加セキュリティ層）
# ========================================
# server {
#     listen 443 ssl http2;
#     server_name backup.example.com;
#
#     ssl_certificate C:/nginx/certs/backup.crt;
#     ssl_certificate_key C:/nginx/certs/backup.key;
#
#     # Basic認証
#     auth_basic "Backup Management System";
#     auth_basic_user_file C:/nginx/conf/.htpasswd;
#
#     location / {
#         proxy_pass http://127.0.0.1:5000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }

# ========================================
# ロードバランシング設定（複数インスタンス）
# ========================================
# upstream backup_backend {
#     least_conn;
#     server 127.0.0.1:5000 weight=1 max_fails=3 fail_timeout=30s;
#     server 127.0.0.1:5001 weight=1 max_fails=3 fail_timeout=30s;
#     keepalive 32;
# }
#
# server {
#     listen 443 ssl http2;
#     server_name backup.example.com;
#
#     ssl_certificate C:/nginx/certs/backup.crt;
#     ssl_certificate_key C:/nginx/certs/backup.key;
#
#     location / {
#         proxy_pass http://backup_backend;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_http_version 1.1;
#         proxy_set_header Connection "";
#     }
# }
